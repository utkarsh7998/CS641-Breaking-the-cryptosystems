#include <bits/stdc++.h>
using namespace std;
map<char, int> m;
void intializemap()
{
    char c = 'f';
    int i = 102;
    while (c <= 'u')
    {
        m[c] = i;
        c++; i++;
    }
    for (auto j : m)
    {cout << j.first << ":" << j.second << "\n";}
}
dp[16][32] = [[1, 102, 117, 123, 100, 40, 16, 108, 94, 63, 76, 5, 2, 77, 107, 119, 73, 80, 32, 89, 61, 126, 25, 10, 4, 27, 87, 111, 19, 33, 64, 51] ,
              [1, 103, 68, 19, 52, 22, 107, 99, 37, 1, 103, 68, 19, 52, 22, 107, 99, 37, 1, 103, 68, 19, 52, 22, 107, 99, 37, 1, 103, 68, 19, 52] ,
              [1, 104, 21, 25, 60, 17, 117, 103, 44, 4, 35, 84, 100, 113, 68, 87, 31, 49, 16, 13, 82, 19, 71, 18, 94, 124, 69, 64, 52, 74, 76, 30] ,
              [1, 105, 103, 20, 68, 28, 19, 90, 52, 126, 22, 24, 107, 59, 99, 108, 37, 75, 1, 105, 103, 20, 68, 28, 19, 90, 52, 126, 22, 24, 107, 59] ,
              [1, 106, 60, 10, 44, 92, 100, 59, 31, 111, 82, 56, 94, 58, 52, 51, 72, 12, 2, 85, 120, 20, 88, 57, 73, 118, 62, 95, 37, 112, 61, 116] ,
              [1, 107, 19, 1, 107, 19, 1, 107, 19, 1, 107, 19, 1, 107, 19, 1, 107, 19, 1, 107, 19, 1, 107, 19, 1, 107, 19, 1, 107, 19, 1, 107] ,
              [1, 108, 107, 126, 19, 20, 1, 108, 107, 126, 19, 20, 1, 108, 107, 126, 19, 20, 1, 108, 107, 126, 19, 20, 1, 108, 107, 126, 19, 20, 1, 108] ,
              [1, 109, 70, 10, 74, 65, 100, 105, 15, 111, 34, 23, 94, 86, 103, 51, 98, 14, 2, 91, 13, 20, 21, 3, 73, 83, 30, 95, 68, 46, 61, 45] ,
              [1, 110, 35, 40, 82, 3, 76, 105, 120, 119, 9, 101, 61, 106, 103, 27, 49, 56, 64, 55, 81, 20, 41, 65, 38, 116, 60, 123, 68, 114, 94, 53] ,
              [1, 111, 2, 95, 4, 63, 8, 126, 16, 125, 32, 123, 64, 119, 1, 111, 2, 95, 4, 63, 8, 126, 16, 125, 32, 123, 64, 119, 1, 111, 2, 95] ,
              [1, 112, 98, 54, 79, 85, 122, 75, 18, 111, 113, 83, 25, 6, 37, 80, 70, 93, 2, 97, 69, 108, 31, 43, 117, 23, 36, 95, 99, 39, 50, 12] ,
              [1, 113, 69, 50, 62, 21, 87, 52, 34, 32, 60, 49, 76, 79, 37, 117, 13, 72, 8, 15, 44, 19, 115, 41, 61, 35, 18, 2, 99, 11, 100, 124] ,
              [1, 114, 42, 89, 113, 55, 47, 24, 69, 119, 104, 45, 50, 112, 68, 5, 62, 83, 64, 57, 21, 108, 120, 91, 87, 12, 98, 123, 52, 86, 25, 56] ,
              [1, 115, 17, 50, 35, 88, 87, 99, 82, 32, 124, 36, 76, 104, 22, 117, 120, 84, 8, 31, 9, 19, 26, 69, 61, 30, 21, 2, 103, 34, 100, 70] ,
              [1, 116, 121, 66, 36, 112, 38, 90, 26, 95, 98, 65, 47, 118, 99, 54, 41, 57, 8, 39, 79, 20, 34, 7, 50, 85, 81, 125, 22, 12, 122, 55] ,
              [1, 117, 100, 16, 94, 76, 2, 107, 73, 32, 61, 25, 4, 87, 19, 64, 122, 50, 8, 47, 38, 1, 117, 100, 16, 94, 76, 2, 107, 73, 32, 61]]
             bool found_ans = false;
bool satisfy_eqn(char* out)
{

}
void fun(char* temp, char* out, int i, int j, int n)
{
    if (i == n)
    {
        cout << out << endl;
        //if(satisfy_eqn(out)==true)
        // found_ans = true;
        return;
    }
    if (found_ans == true)
        return;
    out[i] = temp[j];
    fun(temp, out, i + 1, j, n);
    out[i] = temp[j + 1];
    fun(temp, out, i + 1, j + 1, n);
}

int main()
{
#ifndef ONLINR_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    char temp[] = "fghijklmnopqrstu";
    char out[20];
    // fun(temp, out, 0, 0, 20);
    intializemap();
    // long long int  x = pow(102, 30);
    // cout << x;
    return 0;
}